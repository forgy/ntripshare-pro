<?xml version="1.0"?>
<doc>
    <assembly>
        <name>WatsonTcp</name>
    </assembly>
    <members>
        <member name="T:WatsonTcp.ClientConnectedEventArgs">
            <summary>
            Event arguments for when a client connects to the server.
            </summary>
        </member>
        <member name="P:WatsonTcp.ClientConnectedEventArgs.IpPort">
            <summary>
            The IP:port of the client.
            </summary>
        </member>
        <member name="T:WatsonTcp.ClientDisconnectedEventArgs">
            <summary>
            Event arguments for when a client disconnects from the server.
            </summary>
        </member>
        <member name="P:WatsonTcp.ClientDisconnectedEventArgs.IpPort">
            <summary>
            The IP:port of the client.
            </summary>
        </member>
        <member name="P:WatsonTcp.ClientDisconnectedEventArgs.Reason">
            <summary>
            The reason for the disconnection.
            </summary>
        </member>
        <member name="M:WatsonTcp.ClientMetadata.Dispose">
            <summary>
            Tear down the object and dispose of resources.
            </summary>
        </member>
        <member name="T:WatsonTcp.DisconnectReason">
            <summary>
            Reason why a client disconnected.
            </summary>
        </member>
        <member name="F:WatsonTcp.DisconnectReason.Normal">
            <summary>
            Normal disconnection.
            </summary>
        </member>
        <member name="F:WatsonTcp.DisconnectReason.Kicked">
            <summary>
            Client connection was intentionally terminated programmatically or by the server.
            </summary>
        </member>
        <member name="F:WatsonTcp.DisconnectReason.Timeout">
            <summary>
            Client connection timed out; server did not receive data within the timeout window.
            </summary>
        </member>
        <member name="T:WatsonTcp.MessageReceivedFromClientEventArgs">
            <summary>
            Event arguments for when a message is received from a client.
            </summary>
        </member>
        <member name="P:WatsonTcp.MessageReceivedFromClientEventArgs.IpPort">
            <summary>
            The IP:port of the client.
            </summary>
        </member>
        <member name="P:WatsonTcp.MessageReceivedFromClientEventArgs.Metadata">
            <summary>
            The metadata received from the client.
            </summary>
        </member>
        <member name="P:WatsonTcp.MessageReceivedFromClientEventArgs.Data">
            <summary>
            The data received from the client.
            </summary>
        </member>
        <member name="T:WatsonTcp.MessageReceivedFromServerEventArgs">
            <summary>
            Event arguments for when a message is received from the server.
            </summary>
        </member>
        <member name="P:WatsonTcp.MessageReceivedFromServerEventArgs.Metadata">
            <summary>
            The metadata received from the server.
            </summary>
        </member>
        <member name="P:WatsonTcp.MessageReceivedFromServerEventArgs.Data">
            <summary>
            The data received from the server.
            </summary>
        </member>
        <member name="P:WatsonTcp.Message.WatsonMessage.Length">
            <summary>
            Length of all header fields and payload data.
            </summary>
        </member>
        <member name="P:WatsonTcp.Message.WatsonMessage.ContentLength">
            <summary>
            Length of the data.
            </summary>
        </member>
        <member name="F:WatsonTcp.Message.WatsonMessage.HeaderFields">
            <summary>
            Bit array indicating which fields in the header are set.
            </summary>
        </member>
        <member name="P:WatsonTcp.Message.WatsonMessage.PresharedKey">
            <summary>
            Preshared key for connection authentication.  HeaderFields[0], 16 bytes.
            </summary>
        </member>
        <member name="P:WatsonTcp.Message.WatsonMessage.Status">
            <summary>
            Status of the message.  HeaderFields[1], 4 bytes (Int32).
            </summary>
        </member>
        <member name="F:WatsonTcp.Message.WatsonMessage.MetadataLength">
            <summary>
            Length of metadata attached to the message.  HeaderFields[2], 8 bytes (Int64).
            </summary>
        </member>
        <member name="F:WatsonTcp.Message.WatsonMessage.MetadataBytes">
            <summary>
            Bytes associated with metadata.
            </summary>
        </member>
        <member name="F:WatsonTcp.Message.WatsonMessage.Metadata">
            <summary>
            Metadata dictionary.
            </summary>
        </member>
        <member name="P:WatsonTcp.Message.WatsonMessage.Data">
            <summary>
            Message data.
            </summary>
        </member>
        <member name="P:WatsonTcp.Message.WatsonMessage.DataStream">
            <summary>
            Stream containing the message data.
            </summary>
        </member>
        <member name="P:WatsonTcp.Message.WatsonMessage.ReadStreamBuffer">
            <summary>
            Size of buffer to use while reading message payload.  Default is 64KB.
            </summary>
        </member>
        <member name="M:WatsonTcp.Message.WatsonMessage.#ctor">
            <summary>
            Do not use.
            </summary>
        </member>
        <member name="M:WatsonTcp.Message.WatsonMessage.#ctor(System.Collections.Generic.Dictionary{System.Object,System.Object},System.Byte[],System.Boolean)">
            <summary>
            Construct a new message to send.
            </summary>
            <param name="metadata">Metadata to attach to the message.</param>
            <param name="data">The data to send.</param>
            <param name="debug">Enable or disable debugging.</param>
        </member>
        <member name="M:WatsonTcp.Message.WatsonMessage.#ctor(System.Collections.Generic.Dictionary{System.Object,System.Object},System.Int64,System.IO.Stream,System.Boolean)">
            <summary>
            Construct a new message to send.
            </summary>
            <param name="metadata">Metadata to attach to the message.</param>
            <param name="contentLength">The number of bytes included in the stream.</param>
            <param name="stream">The stream containing the data.</param>
            <param name="debug">Enable or disable debugging.</param>
        </member>
        <member name="M:WatsonTcp.Message.WatsonMessage.#ctor(System.Net.Sockets.NetworkStream,System.Boolean)">
            <summary>
            Read from a stream and construct a message.  Call Build() to populate.
            </summary>
            <param name="stream">NetworkStream.</param>
            <param name="debug">Enable or disable console debugging.</param>
        </member>
        <member name="M:WatsonTcp.Message.WatsonMessage.#ctor(System.Net.Security.SslStream,System.Boolean)">
            <summary>
            Read from an SSL-based stream and construct a message.  Call Build() to populate.
            </summary>
            <param name="stream">SslStream.</param>
            <param name="debug">Enable or disable console debugging.</param>
        </member>
        <member name="M:WatsonTcp.Message.WatsonMessage.Build">
            <summary>
            Awaitable async method to build the Message object from data that awaits in a NetworkStream or SslStream, returning the full message data.
            </summary>
            <returns>Always returns true (void cannot be a return parameter).</returns>
        </member>
        <member name="M:WatsonTcp.Message.WatsonMessage.BuildStream">
            <summary>
            Awaitable async method to build the Message object from data that awaits in a NetworkStream or SslStream, returning the stream itself.
            </summary>
            <returns>Always returns true (void cannot be a return parameter).</returns>
        </member>
        <member name="M:WatsonTcp.Message.WatsonMessage.ToHeaderBytes(System.Int64)">
            <summary>
            Creates a byte array useful for transmission, without packaging the data.
            </summary>
            <returns>Byte array.</returns>
        </member>
        <member name="M:WatsonTcp.Message.WatsonMessage.ToString">
            <summary>
            Human-readable string version of the object.
            </summary>
            <returns>String.</returns>
        </member>
        <member name="T:WatsonTcp.Statistics">
            <summary>
            Watson TCP statistics.
            </summary>
        </member>
        <member name="P:WatsonTcp.Statistics.StartTime">
            <summary>
            The time at which the client or server was started.
            </summary>
        </member>
        <member name="P:WatsonTcp.Statistics.UpTime">
            <summary>
            The amount of time which the client or server has been up.
            </summary>
        </member>
        <member name="P:WatsonTcp.Statistics.ReceivedBytes">
            <summary>
            The number of bytes received.
            </summary>
        </member>
        <member name="P:WatsonTcp.Statistics.ReceivedMessages">
            <summary>
            The number of messages received.
            </summary>
        </member>
        <member name="P:WatsonTcp.Statistics.ReceivedMessageSizeAverage">
            <summary>
            Average received message size in bytes.
            </summary>
        </member>
        <member name="P:WatsonTcp.Statistics.SentBytes">
            <summary>
            The number of bytes sent.
            </summary>
        </member>
        <member name="P:WatsonTcp.Statistics.SentMessages">
            <summary>
            The number of messages sent.
            </summary>
        </member>
        <member name="P:WatsonTcp.Statistics.SentMessageSizeAverage">
            <summary>
            Average sent message size in bytes.
            </summary>
        </member>
        <member name="M:WatsonTcp.Statistics.#ctor">
            <summary>
            Initialize the statistics object.
            </summary>
        </member>
        <member name="M:WatsonTcp.Statistics.ToString">
            <summary>
            Return human-readable version of the object.
            </summary>
            <returns></returns>
        </member>
        <member name="M:WatsonTcp.Statistics.Reset">
            <summary>
            Reset statistics other than StartTime and UpTime.
            </summary>
        </member>
        <member name="T:WatsonTcp.StreamReceivedFromClientEventArgs">
            <summary>
            Event arguments for when a stream is received from a client.
            </summary>
        </member>
        <member name="P:WatsonTcp.StreamReceivedFromClientEventArgs.IpPort">
            <summary>
            The IP:port of the client.
            </summary>
        </member>
        <member name="P:WatsonTcp.StreamReceivedFromClientEventArgs.Metadata">
            <summary>
            The metadata received from the client.
            </summary>
        </member>
        <member name="P:WatsonTcp.StreamReceivedFromClientEventArgs.ContentLength">
            <summary>
            The number of data bytes that should be read from DataStream.
            </summary>
        </member>
        <member name="P:WatsonTcp.StreamReceivedFromClientEventArgs.DataStream">
            <summary>
            The stream containing the message data.
            </summary>
        </member>
        <member name="P:WatsonTcp.StreamReceivedFromClientEventArgs.Data">
            <summary>
            The data from DataStream.
            Using Data will fully read the contents of DataStream.
            </summary>
        </member>
        <member name="T:WatsonTcp.StreamReceivedFromServerEventArgs">
            <summary>
            Event arguments for when a stream is received from the server.
            </summary>
        </member>
        <member name="P:WatsonTcp.StreamReceivedFromServerEventArgs.Metadata">
            <summary>
            The metadata received from the server.
            </summary>
        </member>
        <member name="P:WatsonTcp.StreamReceivedFromServerEventArgs.ContentLength">
            <summary>
            The number of data bytes that should be read from DataStream.
            </summary>
        </member>
        <member name="P:WatsonTcp.StreamReceivedFromServerEventArgs.DataStream">
            <summary>
            The stream containing the message data.
            </summary>
        </member>
        <member name="P:WatsonTcp.StreamReceivedFromServerEventArgs.Data">
            <summary>
            The data from DataStream.
            Using Data will fully read the contents of DataStream.
            </summary>
        </member>
        <member name="T:WatsonTcp.WatsonTcpClient">
            <summary>
            Watson TCP client, with or without SSL.
            </summary>
        </member>
        <member name="P:WatsonTcp.WatsonTcpClient.StreamBufferSize">
            <summary>
            Buffer size to use when reading input and output streams.  Default is 65536.
            </summary>
        </member>
        <member name="F:WatsonTcp.WatsonTcpClient.Debug">
            <summary>
            Enable or disable message debugging.
            </summary>
        </member>
        <member name="F:WatsonTcp.WatsonTcpClient.AuthenticationRequested">
            <summary>
            Function called when authentication is requested from the server.  Expects the 16-byte preshared key.
            </summary>
        </member>
        <member name="E:WatsonTcp.WatsonTcpClient.AuthenticationSucceeded">
            <summary>
            Event fired when authentication has succeeded.
            </summary>
        </member>
        <member name="E:WatsonTcp.WatsonTcpClient.AuthenticationFailure">
            <summary>
            Event fired when authentication has failed.
            </summary>
        </member>
        <member name="E:WatsonTcp.WatsonTcpClient.MessageReceived">
            <summary>
            Use of 'MessageReceived' is exclusive and cannot be used with 'StreamReceived'.  
            This event is fired when a message is received from the server and it is desired that WatsonTcp pass the byte array containing the message payload. 
            </summary>
        </member>
        <member name="E:WatsonTcp.WatsonTcpClient.StreamReceived">
            <summary>
            Use of 'StreamReceived' is exclusive and cannot be used with 'MessageReceived'.  
            This callback is called when a stream is received from the server and it is desired that WatsonTcp pass the stream containing the message payload to your application. 
            </summary>
        </member>
        <member name="E:WatsonTcp.WatsonTcpClient.ServerConnected">
            <summary>
            Event fired when the client successfully connects to the server.
            </summary>
        </member>
        <member name="E:WatsonTcp.WatsonTcpClient.ServerDisconnected">
            <summary>
            Event fired when the client disconnects from the server.
            </summary>
        </member>
        <member name="F:WatsonTcp.WatsonTcpClient.AcceptInvalidCertificates">
            <summary>
            Enable acceptance of SSL certificates from the server that cannot be validated.
            </summary>
        </member>
        <member name="P:WatsonTcp.WatsonTcpClient.MutuallyAuthenticate">
            <summary>
            Require mutual authentication between the server and this client.
            </summary>
        </member>
        <member name="P:WatsonTcp.WatsonTcpClient.Connected">
            <summary>
            Indicates whether or not the client is connected to the server.
            </summary>
        </member>
        <member name="P:WatsonTcp.WatsonTcpClient.ConnectTimeoutSeconds">
            <summary>
            The number of seconds to wait before timing out a connection attempt.  Default is 5 seconds.
            </summary>
        </member>
        <member name="F:WatsonTcp.WatsonTcpClient.Logger">
            <summary>
            Method to invoke when sending a log message.
            </summary>
        </member>
        <member name="P:WatsonTcp.WatsonTcpClient.Stats">
            <summary>
            Access Watson TCP statistics.
            </summary>
        </member>
        <member name="M:WatsonTcp.WatsonTcpClient.#ctor(System.String,System.Int32)">
            <summary>
            Initialize the Watson TCP client without SSL.  Call Start() afterward to connect to the server.
            </summary>
            <param name="serverIp">The IP address or hostname of the server.</param>
            <param name="serverPort">The TCP port on which the server is listening.</param>
        </member>
        <member name="M:WatsonTcp.WatsonTcpClient.#ctor(System.String,System.Int32,System.String,System.String)">
            <summary>
            Initialize the Watson TCP client with SSL.  Call Start() afterward to connect to the server.
            </summary>
            <param name="serverIp">The IP address or hostname of the server.</param>
            <param name="serverPort">The TCP port on which the server is listening.</param>
            <param name="pfxCertFile">The file containing the SSL certificate.</param>
            <param name="pfxCertPass">The password for the SSL certificate.</param>
        </member>
        <member name="M:WatsonTcp.WatsonTcpClient.Dispose">
            <summary>
            Tear down the client and dispose of background workers.
            </summary>
        </member>
        <member name="M:WatsonTcp.WatsonTcpClient.Start">
            <summary>
            Start the client and establish a connection to the server.
            </summary>
        </member>
        <member name="M:WatsonTcp.WatsonTcpClient.StartAsync">
            <summary>
            Start the client and establish a connection to the server.
            </summary>
            <returns></returns>
        </member>
        <member name="M:WatsonTcp.WatsonTcpClient.Authenticate(System.String)">
            <summary>
            Send a pre-shared key to the server to authenticate.
            </summary>
            <param name="presharedKey">Up to 16-character string.</param>
        </member>
        <member name="M:WatsonTcp.WatsonTcpClient.Send(System.String)">
            <summary>
            Send data to the server.
            </summary>
            <param name="data">String containing data.</param>
            <returns>Boolean indicating if the message was sent successfully.</returns>
        </member>
        <member name="M:WatsonTcp.WatsonTcpClient.Send(System.Collections.Generic.Dictionary{System.Object,System.Object},System.String)">
            <summary>
            Send data and metadata to the server.
            </summary>
            <param name="metadata">Dictionary containing metadata.</param>
            <param name="data">String containing data.</param>
            <returns>Boolean indicating if the message was sent successfully.</returns>
        </member>
        <member name="M:WatsonTcp.WatsonTcpClient.Send(System.Byte[])">
            <summary>
            Send data to the server.
            </summary>
            <param name="data">Byte array containing data.</param>
            <returns>Boolean indicating if the message was sent successfully.</returns>
        </member>
        <member name="M:WatsonTcp.WatsonTcpClient.Send(System.Collections.Generic.Dictionary{System.Object,System.Object},System.Byte[])">
            <summary>
            Send data and metadata to the server.
            </summary>
            <param name="metadata">Dictionary containing metadata.</param>
            <param name="data">Byte array containing data.</param>
            <returns>Boolean indicating if the message was sent successfully.</returns>
        </member>
        <member name="M:WatsonTcp.WatsonTcpClient.Send(System.Int64,System.IO.Stream)">
            <summary>
            Send data to the server using a stream.
            </summary>
            <param name="contentLength">The number of bytes in the stream.</param>
            <param name="stream">The stream containing the data.</param>
            <returns>Boolean indicating if the message was sent successfully.</returns>
        </member>
        <member name="M:WatsonTcp.WatsonTcpClient.Send(System.Collections.Generic.Dictionary{System.Object,System.Object},System.Int64,System.IO.Stream)">
            <summary>
            Send data and metadata to the server using a stream.
            </summary>
            <param name="metadata">Dictionary containing metadata.</param>
            <param name="contentLength">The number of bytes in the stream.</param>
            <param name="stream">The stream containing the data.</param>
            <returns>Boolean indicating if the message was sent successfully.</returns>
        </member>
        <member name="M:WatsonTcp.WatsonTcpClient.SendAsync(System.String)">
            <summary>
            Send data to the server asynchronously.
            </summary>
            <param name="data">String containing data.</param>
            <returns>Boolean indicating if the message was sent successfully.</returns>
        </member>
        <member name="M:WatsonTcp.WatsonTcpClient.SendAsync(System.Collections.Generic.Dictionary{System.Object,System.Object},System.String)">
            <summary>
            Send data and metadata to the server asynchronously.
            </summary>
            <param name="metadata">Dictionary containing metadata.</param>
            <param name="data">String containing data.</param>
            <returns>Boolean indicating if the message was sent successfully.</returns>
        </member>
        <member name="M:WatsonTcp.WatsonTcpClient.SendAsync(System.Byte[])">
            <summary>
            Send data to the server asynchronously.
            </summary>
            <param name="data">Byte array containing data.</param>
            <returns>Task with Boolean indicating if the message was sent successfully.</returns>
        </member>
        <member name="M:WatsonTcp.WatsonTcpClient.SendAsync(System.Collections.Generic.Dictionary{System.Object,System.Object},System.Byte[])">
            <summary>
            Send data and metadata to the server asynchronously.
            </summary>
            <param name="metadata">Dictionary containing metadata.</param>
            <param name="data">Byte array containing data.</param>
            <returns>Task with Boolean indicating if the message was sent successfully.</returns>
        </member>
        <member name="M:WatsonTcp.WatsonTcpClient.SendAsync(System.Int64,System.IO.Stream)">
            <summary>
            Send data to the server from a stream asynchronously.
            </summary>
            <param name="contentLength">The number of bytes to send.</param>
            <param name="stream">The stream containing the data.</param>
            <returns>Task with Boolean indicating if the message was sent successfully.</returns>
        </member>
        <member name="M:WatsonTcp.WatsonTcpClient.SendAsync(System.Collections.Generic.Dictionary{System.Object,System.Object},System.Int64,System.IO.Stream)">
            <summary>
            Send data and metadata to the server from a stream asynchronously.
            </summary>
            <param name="metadata">Dictionary containing metadata.</param>
            <param name="contentLength">The number of bytes to send.</param>
            <param name="stream">The stream containing the data.</param>
            <returns>Task with Boolean indicating if the message was sent successfully.</returns>
        </member>
        <member name="M:WatsonTcp.WatsonTcpClient.Dispose(System.Boolean)">
            <summary>
            Tear down the client and dispose of background workers.
            </summary>
            <param name="disposing">Indicate if resources should be disposed.</param>
        </member>
        <member name="T:WatsonTcp.WatsonTcpServer">
            <summary>
            Watson TCP server, with or without SSL.
            </summary>
        </member>
        <member name="P:WatsonTcp.WatsonTcpServer.StreamBufferSize">
            <summary>
            Buffer size to use when reading input and output streams.  Default is 65536.
            </summary>
        </member>
        <member name="P:WatsonTcp.WatsonTcpServer.IdleClientTimeoutSeconds">
            <summary>
            Maximum amount of time to wait before considering a client idle and disconnecting them. 
            By default, this value is set to 0, which will never disconnect a client due to inactivity.
            The timeout is reset any time a message is received from a client or a message is sent to a client.
            For instance, if you set this value to 30, the client will be disconnected if the server has not received a message from the client within 30 seconds or if a message has not been sent to the client in 30 seconds.
            </summary>
        </member>
        <member name="P:WatsonTcp.WatsonTcpServer.MaxConnections">
            <summary>
            Specify the maximum number of connections the server will accept.
            </summary>
        </member>
        <member name="P:WatsonTcp.WatsonTcpServer.Connections">
            <summary>
            Retrieve the number of current connected clients.
            </summary>
        </member>
        <member name="P:WatsonTcp.WatsonTcpServer.IsListening">
            <summary>
            Flag to indicate if Watson TCP is listening for incoming TCP connections.
            </summary>
        </member>
        <member name="F:WatsonTcp.WatsonTcpServer.Debug">
            <summary>
            Enable or disable message debugging.
            </summary>
        </member>
        <member name="F:WatsonTcp.WatsonTcpServer.PermittedIPs">
            <summary>
            Permitted IP addresses.
            </summary>
        </member>
        <member name="E:WatsonTcp.WatsonTcpServer.ClientConnected">
            <summary>
            Event to fire when a client connects to the server.
            The IP:port of the client is passed in the arguments.
            </summary>
        </member>
        <member name="E:WatsonTcp.WatsonTcpServer.ClientDisconnected">
            <summary>
            Event to fire when a client disconnects from the server.
            The IP:port is passed in the arguments along with the reason for the disconnection.
            </summary>
        </member>
        <member name="E:WatsonTcp.WatsonTcpServer.MessageReceived">
            <summary>
            Use of 'MessageReceived' is exclusive and cannot be used with 'StreamReceived'.  
            This event is fired when a message is received from a client and it is desired that WatsonTcp pass the byte array containing the message payload. 
            </summary>
        </member>
        <member name="E:WatsonTcp.WatsonTcpServer.StreamReceived">
            <summary>
            Use of 'StreamReceived' is exclusive and cannot be used with 'StreamReceived'.  
            This event is fired when a stream is received from a client and it is desired that WatsonTcp pass the stream containing the message payload to your application. 
            </summary>
        </member>
        <member name="F:WatsonTcp.WatsonTcpServer.AcceptInvalidCertificates">
            <summary>
            Enable acceptance of SSL certificates from clients that cannot be validated.
            </summary>
        </member>
        <member name="F:WatsonTcp.WatsonTcpServer.MutuallyAuthenticate">
            <summary>
            Require mutual authentication between SSL clients and this server.
            </summary>
        </member>
        <member name="F:WatsonTcp.WatsonTcpServer.PresharedKey">
            <summary>
            Preshared key that must be consistent between clients and this server.
            </summary>
        </member>
        <member name="F:WatsonTcp.WatsonTcpServer.Logger">
            <summary>
            Method to invoke when sending a log message.
            </summary>
        </member>
        <member name="P:WatsonTcp.WatsonTcpServer.Stats">
            <summary>
            Access Watson TCP statistics.
            </summary>
        </member>
        <member name="M:WatsonTcp.WatsonTcpServer.#ctor(System.String,System.Int32)">
            <summary>
            Initialize the Watson TCP server without SSL.
            Supply a specific IP address on which to listen.  Otherwise, use 'null' for the IP address to listen on any IP address.
            If you do not specify an IP address, you may have to run WatsonTcp with administrative privileges.  
            Call Start() afterward to start the server.
            </summary>
            <param name="listenerIp">The IP address on which the server should listen.  If null, listen on any IP address (may require administrative privileges).</param>
            <param name="listenerPort">The TCP port on which the server should listen.</param>
        </member>
        <member name="M:WatsonTcp.WatsonTcpServer.#ctor(System.String,System.Int32,System.String,System.String)">
            <summary>
            Initialize the Watson TCP server with SSL.  
            Supply a specific IP address on which to listen.  Otherwise, use 'null' for the IP address to listen on any IP address.
            If you do not specify an IP address, you may have to run WatsonTcp with administrative privileges.  
            Call Start() afterward to start the server.
            </summary>
            <param name="listenerIp">The IP address on which the server should listen.  If null, listen on any IP address (may require administrative privileges).</param>
            <param name="listenerPort">The TCP port on which the server should listen.</param>
            <param name="pfxCertFile">The file containing the SSL certificate.</param>
            <param name="pfxCertPass">The password for the SSL certificate.</param>
        </member>
        <member name="M:WatsonTcp.WatsonTcpServer.Dispose">
            <summary>
            Tear down the server and dispose of background workers.
            </summary>
        </member>
        <member name="M:WatsonTcp.WatsonTcpServer.Start">
            <summary>
            Start the server.
            </summary>
        </member>
        <member name="M:WatsonTcp.WatsonTcpServer.StartAsync">
            <summary>
            Start the server.
            </summary>
        </member>
        <member name="M:WatsonTcp.WatsonTcpServer.Send(System.String,System.String)">
            <summary>
            Send data to the specified client.
            </summary>
            <param name="ipPort">IP:port of the recipient client.</param>
            <param name="data">String containing data.</param>
            <returns>Boolean indicating if the message was sent successfully.</returns>
        </member>
        <member name="M:WatsonTcp.WatsonTcpServer.Send(System.String,System.Collections.Generic.Dictionary{System.Object,System.Object},System.String)">
            <summary>
            Send data and metadata to the specified client.
            </summary>
            <param name="ipPort">IP:port of the recipient client.</param>
            <param name="metadata">Dictionary containing metadata.</param>
            <param name="data">String containing data.</param>
            <returns>Boolean indicating if the message was sent successfully.</returns>
        </member>
        <member name="M:WatsonTcp.WatsonTcpServer.Send(System.String,System.Byte[])">
            <summary>
            Send data to the specified client.
            </summary>
            <param name="ipPort">IP:port of the recipient client.</param>
            <param name="data">Byte array containing data.</param>
            <returns>Boolean indicating if the message was sent successfully.</returns>
        </member>
        <member name="M:WatsonTcp.WatsonTcpServer.Send(System.String,System.Collections.Generic.Dictionary{System.Object,System.Object},System.Byte[])">
            <summary>
            Send data and metadata to the specified client.
            </summary>
            <param name="ipPort">IP:port of the recipient client.</param>
            <param name="metadata">Dictionary containing metadata.</param>
            <param name="data">Byte array containing data.</param>
            <returns>Boolean indicating if the message was sent successfully.</returns>
        </member>
        <member name="M:WatsonTcp.WatsonTcpServer.Send(System.String,System.Int64,System.IO.Stream)">
            <summary>
            Send data to the specified client using a stream.
            </summary>
            <param name="ipPort">IP:port of the recipient client.</param>
            <param name="contentLength">The number of bytes in the stream.</param>
            <param name="stream">The stream containing the data.</param>
            <returns>Boolean indicating if the message was sent successfully.</returns>
        </member>
        <member name="M:WatsonTcp.WatsonTcpServer.Send(System.String,System.Collections.Generic.Dictionary{System.Object,System.Object},System.Int64,System.IO.Stream)">
            <summary>
            Send data and metadata to the specified client using a stream.
            </summary>
            <param name="ipPort">IP:port of the recipient client.</param>
            <param name="metadata">Dictionary containing metadata.</param>
            <param name="contentLength">The number of bytes in the stream.</param>
            <param name="stream">The stream containing the data.</param>
            <returns>Boolean indicating if the message was sent successfully.</returns>
        </member>
        <member name="M:WatsonTcp.WatsonTcpServer.SendAsync(System.String,System.String)">
            <summary>
            Send data to the specified client, asynchronously.
            </summary>
            <param name="ipPort">IP:port of the recipient client.</param>
            <param name="data">String containing data.</param>
            <returns>Task with Boolean indicating if the message was sent successfully.</returns>
        </member>
        <member name="M:WatsonTcp.WatsonTcpServer.SendAsync(System.String,System.Collections.Generic.Dictionary{System.Object,System.Object},System.String)">
            <summary>
            Send data and metadata to the specified client, asynchronously.
            </summary>
            <param name="ipPort">IP:port of the recipient client.</param>
            <param name="metadata">Dictionary containing metadata.</param>
            <param name="data">String containing data.</param>
            <returns>Task with Boolean indicating if the message was sent successfully.</returns>
        </member>
        <member name="M:WatsonTcp.WatsonTcpServer.SendAsync(System.String,System.Byte[])">
            <summary>
            Send data to the specified client, asynchronously.
            </summary>
            <param name="ipPort">IP:port of the recipient client.</param>
            <param name="data">Byte array containing data.</param>
            <returns>Task with Boolean indicating if the message was sent successfully.</returns>
        </member>
        <member name="M:WatsonTcp.WatsonTcpServer.SendAsync(System.String,System.Collections.Generic.Dictionary{System.Object,System.Object},System.Byte[])">
            <summary>
            Send data and metadata to the specified client, asynchronously.
            </summary>
            <param name="ipPort">IP:port of the recipient client.</param>
            <param name="metadata">Dictionary containing metadata.</param>
            <param name="data">Byte array containing data.</param>
            <returns>Task with Boolean indicating if the message was sent successfully.</returns>
        </member>
        <member name="M:WatsonTcp.WatsonTcpServer.SendAsync(System.String,System.Int64,System.IO.Stream)">
            <summary>
            Send data to the specified client using a stream, asynchronously.
            </summary>
            <param name="ipPort">IP:port of the recipient client.</param>
            <param name="contentLength">The number of bytes in the stream.</param>
            <param name="stream">The stream containing the data.</param>
            <returns>Task with Boolean indicating if the message was sent successfully.</returns>
        </member>
        <member name="M:WatsonTcp.WatsonTcpServer.SendAsync(System.String,System.Collections.Generic.Dictionary{System.Object,System.Object},System.Int64,System.IO.Stream)">
            <summary>
            Send data and metadata to the specified client using a stream, asynchronously.
            </summary>
            <param name="ipPort">IP:port of the recipient client.</param>
            <param name="metadata">Dictionary containing metadata.</param>
            <param name="contentLength">The number of bytes in the stream.</param>
            <param name="stream">The stream containing the data.</param>
            <returns>Task with Boolean indicating if the message was sent successfully.</returns>
        </member>
        <member name="M:WatsonTcp.WatsonTcpServer.IsClientConnected(System.String)">
            <summary>
            Determine whether or not the specified client is connected to the server.
            </summary>
            <returns>Boolean indicating if the client is connected to the server.</returns>
        </member>
        <member name="M:WatsonTcp.WatsonTcpServer.ListClients">
            <summary>
            List the IP:port of each connected client.
            </summary>
            <returns>An enumerable string list containing each client IP:port.</returns>
        </member>
        <member name="M:WatsonTcp.WatsonTcpServer.DisconnectClient(System.String)">
            <summary>
            Disconnects the specified client.
            </summary>
            <param name="ipPort">IP:port of the client.</param>
        </member>
        <member name="M:WatsonTcp.WatsonTcpServer.Dispose(System.Boolean)">
            <summary>
            Tear down the server and dispose of background workers.
            </summary>
            <param name="disposing">Indicate if resources should be disposed.</param>
        </member>
    </members>
</doc>
